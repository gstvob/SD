library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity relogio is
port (	Clk : in std_logic;
			in0, in1, in2, in3:  in std_logic_vector(3 downto 0);
			s0,s1,m0,m1,h0,h1 : out std_logic_vector(3 downto 0);
);

architecture relogio_behav of relogio is
signal se0, mi0 : integer range 0 to 9;
signal se1, mi1 : integer range 0 to 5;
signal ho0 : integer range 0 to 3;
signal ho1 : integer range 0 to 2;
signal min, hour : std_logic;
begin

s0 <= conv_std_logic_vector(se0, 4);
s1 <= conv_std_logic_vector(se1, 4); 
	process(Clk)
	begin
		if rising_edge(Clk)
			if (se0 /= 9) then
				se0 <= se0+1;
			elsif (se1 /= 5) then
				se0 <= 0;
				se1 <= se1+1;
			elsif se0 > 9 se1 > 5 then
				se0 <= 0;
				se1 <= 0;
				min <= '1';
				if hour = '1' and h /= 9 then
					min <= '0';
					mi0 <= to_integer(in0) + mi0 + 1;
				elsif min = '1' and mi1 /= 9 then
					min <= '0';
					mi1 <= to_integer(in1) + mi1 + 1;
				elsif mi0 > 9 mi1 > 5 then
					mi0 <= 0;
					mi1 <= 0;
					hour <= '1';
					if min = '1' and mi0 /= 9 then
					min <= '0';
					mi0 <= to_integer(in2) + mi0 + 1;
				elsif min = '1' and mi1 /= 9 then
					min <= '0';
					mi1 <= to_integer(in3) + mi1 + 1;
				elsif se0 > 9 se1 > 5 then
					mi0 <= 0;
					mi1 <= 0;
					hour <= '1';
end architecture;