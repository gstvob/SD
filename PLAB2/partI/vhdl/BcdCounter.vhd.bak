library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std;

entity BcdCounter is
port ( Clk, reset : in std_logic;
		 d1, d2, d3 : out std_logic_vector(3 downto 0)
);
end;

architecture BcdCounter_behv of BcdCounter is
signal i1, i2, i3 : std_logic_vector(3 downto 0);
begin

	i1 <= "0000";
	i2 <= "0000";
	i3 <= "0000";
	
	process(Clk, reset)
	begin
		if reset = '1' then
			i1 <= "0000";
			i2 <= "0000";
			i3 <= "0000";
		else if rising_edge(Clk) and unsigned(i1) < 9 then
			i1 <= std_logic_vector(unsigned(i1) + '1');
		else if rising_edge(Clk) and unsigned(i2) < 9 then
			i1 <= "0000";
			i2 <= std_logic_vector(unsigned(i2) + '1');
		else if rising_edge(Clk) and unsigned(i3) < 9 then
			i1 <= "0000";
			i2 <= "0000";
			i3 <= std_logic_vector(unsigned(i3) + '1');
		end if;
	end process;
	d1 <= i1;
	d2 <= i2;
	d3 <= i3;
end;
