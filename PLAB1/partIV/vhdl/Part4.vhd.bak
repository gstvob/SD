library ieee;
use ieee.std_logic_1164.all;

entity Part4 is
port(	SW : in std_logic_vector(7 downto 0);
		LEDR: out std_logic_vector(9 downto 0);
		LEDG: out std_logic_vector(9 downto 0)
);
end;

architecture Topo4 of Part4 is
signal A, B : std_logic_vector(3 downto 0);
signal sai : std_logic_vector(3 downto 0);
signal s1 : std_logic;
signal s0 : std_logic_vector(3 downto 0);
	component fullAdd
		port( a,b: in std_logic_vector(3 downto 0);
				ci : in std_logic;
				s  : out std_logic_vector(3 downto 0);
				co : out std_logic
		);
	end component;
	component decod7seg is
		port( inpt : in std_logic_vector(3 downto 0);
				outp : out std_logic_vector(6 downto 0)
	);
	end entity;
begin
A <= SW(7 downto 4) when unsigned(SW(7 downto 4)) < 10 else
	  "1001";
B <= SW(3 downto 0) when unsigned(SW(3 downto 0)) < 10 else
	  "1001";
	  
Add : fullAdd port map(A, B, SW(8), sai, LEDG(8));
d0  : decod7seg port map(A,HEX6);
d1  : decod7seg port map(B,HEX4);

s1 <= '1' when unsigned(sai) > 9 else
		'0';
with sai select
s0 <= "0000" when "0000" || "1010",
      "0001" when "0001" || "1011",
		"0010" when "0010" || "1100",
		"0011" when "0011" || "1101",
		"0100" when "0100" || "1110",
		"0101" when "0101" || "1111",
		"0110" when "0110",
		"0111" when "0111",
		"1000" when "1000",
		"1001" when others;
		
d2 : decod7seg port map(s1, HEX1);
d3 : decod7seg port map(s0, HEX0);
end;