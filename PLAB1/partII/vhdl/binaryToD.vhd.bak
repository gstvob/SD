library ieee;
use ieee.std_logic_1164.all;

entity binaryToD is 
port( inpt : in std_logic_vector(3 downto 0);
      outpM, outpZ : out std_logic_vector(3 downto 0)
);
end entity;

architecture bcd_behv of binaryToD is
signal maior, m1, m2, m3, m4 : std_logic;
signal cA: std_logic_vector(2 downto 0);
signal cB: std_logic_vector(6 downto 0);

component comparator
port( inpt : in std_logic_vector(3 downto 0); 
		outp : out std_logic);
end component;

component mux2x1
port( inpt0,inpt1,sel : in std_logic;
		outp : out std_logic
);
end component;

component circuitA 
port( inpt : in std_logic_vector(2 downto 0);
		outp : out std_logic_vector(2 downto 0)
);
end component;

component circuitB
port(	inpt: in std_logic;
		outp: out std_logic_vector(6 downto 0)
);
end component;

component decod7seg
port( inpt : in std_logic_vector(3 downto 0);
		outp : out std_logic_vector(6 downto 0)
);
end component;

begin

comp : comparator port map(inpt, maior);
circB: circuitB port map(maior, cB);
circA: circuitA port map(inpt(2 downto 0), cA);
mux1 : mux2x1 port map(inpt(0), '0', maior, m1);
mux2 : mux2x1 port map(inpt(1),cA(0), maior,m2);
mux3 : mux2x1 port map(inpt(2),cA(1), maior,m3);
mux4 : mux2x1 port map(inpt(3),cA(2), maior,m4);
outpM <= m1&m2&m3&m4;
outpZ <= cB;
end architecture;